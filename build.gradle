plugins {
 id 'java'
}

repositories {
    mavenCentral()
    mavenLocal()
}


dependencies {
// https://mvnrepository.com/artifact/org.apache.kafka/kafka-clients
       implementation group: 'org.apache.kafka', name: 'kafka-clients', version: '3.1.0'
// https://mvnrepository.com/artifact/org.slf4j/slf4j-api
       implementation group: 'org.slf4j', name: 'slf4j-api', version: '1.7.36'
// https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
       implementation group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.36'
}

jar {
   archiveName = 'consumer.jar'
   manifest {
//      attributes 'Main-Class' : 'io.conduktor.demos.kafka.ProducerDemo', 'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' '), 'Implementation-Version': project.version
//      attributes 'Main-Class' : 'io.conduktor.demos.kafka.ProducerDemoWithCallbacks', 'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' '), 'Implementation-Version': project.version
//      attributes 'Main-Class' : 'io.conduktor.demos.kafka.ProducerDemoKeys', 'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' '), 'Implementation-Version': project.version
//      attributes 'Main-Class' : 'io.conduktor.demos.kafka.ConsumerDemo', 'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' '), 'Implementation-Version': project.version
//      attributes 'Main-Class' : 'io.conduktor.demos.kafka.ConsumerDemoWithShutdown', 'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' '), 'Implementation-Version': project.version
      attributes 'Main-Class' : 'io.conduktor.demos.kafka.ConsumerDemoCooperative', 'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' '), 'Implementation-Version': project.version
//      attributes 'Class-Path': configurations.runtimeClasspath.files.collect { it.name }.join(' ')
   }
     from(configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }) {}

}


